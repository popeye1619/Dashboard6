{"version":3,"sources":["toggle.svg","add.svg","noti.svg","alert1.svg","dp2.png","logo.png","components/Header.js","components/MainComponent.js","components/Helloteam.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","state","isNavOn","class","className","src","toggle","onClick","setState","alt","to","alert1","noti","add","dp2","logo","href","this","Component","MainComponent","cardstyle","color","textDecoration","style","Team","fontSize","App","path","component","exact","Helloteam","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"oGAAAA,EAAOC,QAAU,IAA0B,oC,mBCA3CD,EAAOC,QAAU,IAA0B,iC,mBCA3CD,EAAOC,QAAU,IAA0B,kC,mBCA3CD,EAAOC,QAAU,IAA0B,oC,mBCA3CD,EAAOC,QAAU,IAA0B,iC,mBCA3CD,EAAOC,QAAU,IAA0B,kC,oTC6E5BC,E,4MAjEbC,MAAQ,CACNC,SAAS,G,uDAGA,IAAD,OAGR,OAEE,yBAAKC,MAAM,YAEX,yBAAKC,UAAU,UAGb,2BAAG,yBAAKC,IAAKC,IACbC,QAAS,kBAAI,EAAKC,SAAS,CAACN,SAAU,EAAKD,MAAMC,WACjDC,MAAM,SAASM,IAAI,MAErB,kBAAC,IAAD,CAAMC,GAAG,qBACP,yBAAKP,MAAM,aACX,2BAAG,yBAAME,IAAKM,IAAOR,MAAM,QAAOM,IAAI,MACtC,2BAAG,yBAAMJ,IAAKO,IAAMT,MAAM,QAAOM,IAAI,MACvC,2BAAG,yBAAMJ,IAAKQ,IAAKV,MAAM,QAAOM,IAAI,MACpC,2BAAG,yBAAMJ,IAAKS,IAAIX,MAAM,KAAKM,IAAI,OAIlC,yBAAKL,UAAU,WAER,yBAAKC,IAAKU,IAAMZ,MAAM,OAAOM,IAAI,KACjC,6BACD,kBAAC,IAAD,CAAMC,GAAG,qBACV,uBAAGN,UAAU,MAAMY,KAAK,IAAxB,aACA,6BACA,uBAAGZ,UAAU,MAAMY,KAAK,IAAxB,cACA,6BACA,uBAAGZ,UAAU,MAAMY,KAAK,IAAxB,YAIF,yBAAKZ,UAAWa,KAAKhB,MAAMC,QAAU,YAAa,QAGjD,kBAAC,IAAD,CAAMQ,GAAG,qBACV,uBAAGN,UAAU,MAAMY,KAAK,IAAxB,aACA,6BACA,uBAAGZ,UAAU,MAAMY,KAAK,IAAxB,cACA,6BACA,uBAAGZ,UAAU,MAAMY,KAAK,IAAxB,mB,GAlDaE,aCyINC,E,uKA3IP,IAAMC,EAAU,CAChBC,MAAO,QACPC,eAAgB,QAGpB,OAGI,yBAAKnB,MAAM,QAEX,yBAAKA,MAAM,YAEX,yBAAKA,MAAM,aACX,yBAAKA,MAAM,qCACP,kBAAC,IAAD,CAAMoB,MAAOH,EAAWV,GAAG,qBACvB,yBAAKP,MAAM,cAEP,4BAAK,yJACL,2DAQZ,yBAAKA,MAAM,YACX,yBAAKA,MAAM,aACX,yBAAKA,MAAM,mCACX,kBAAC,IAAD,CAAMoB,MAAOH,EAAWV,GAAG,qBACnB,yBAAKP,MAAM,cACP,4CACA,4BAAK,2CAQjB,yBAAKA,MAAM,YAEjB,yBAAKA,MAAM,aACL,yBAAKA,MAAM,8BACX,kBAAC,IAAD,CAAMoB,MAAOH,EAAWV,GAAG,qBACnB,yBAAKP,MAAM,cACP,wCACA,qCAAW,4CACX,sCAAY,mDACZ,uCAAa,4CACb,sCAAY,0CACZ,wCAAc,kDAS1B,yBAAKA,MAAM,YAEjB,yBAAKA,MAAM,aACL,yBAAKA,MAAM,6BACX,kBAAC,IAAD,CAAMoB,MAAOH,EAAWV,GAAG,qBACnB,yBAAKP,MAAM,cACP,6CACA,4BAAK,wDACL,sHAQZ,yBAAKA,MAAM,YACX,yBAAKA,MAAM,aACX,yBAAKA,MAAM,qCACX,kBAAC,IAAD,CAAMoB,MAAOH,EAAWV,GAAG,qBACnB,yBAAKP,MAAM,cACP,wCACA,wDASZ,yBAAKA,MAAM,YAEjB,yBAAKA,MAAM,aACL,yBAAKA,MAAM,mCACX,kBAAC,IAAD,CAAMoB,MAAOH,EAAWV,GAAG,qBACnB,yBAAKP,MAAM,cACP,6CACA,4BAAK,sCACL,8CAAoB,2CAOhC,yBAAKA,MAAM,YAEX,yBAAKA,MAAM,aAGP,yBAAKA,MAAM,qCACX,kBAAC,IAAD,CAAMoB,MAAOH,EAAWV,GAAG,qBACvB,yBAAKP,MAAM,cACP,+CACA,qCAAU,6CACV,mCAAQ,+CACR,oCAAS,6CACT,mCAAQ,6CACR,qCAAU,oD,GA1HFe,aCWbM,E,uKARP,OACI,yBAAKrB,MAAM,QACX,wBAAIoB,MALC,CACTE,SAAU,UAIN,mB,GAPOP,a,OC2CJQ,E,uKA1Bb,OACE,yBAAKtB,UAAU,OACb,kBAAC,IAAD,KACA,kBAAC,IAAD,CAAQuB,KAAK,cAAcC,UAAW5B,IACxC,yBAAKI,UAAU,kBAKb,kBAAC,IAAD,CAAOyB,OAAK,EAACF,KAAK,cAAcC,UAAWT,IAE3C,kBAAC,IAAD,KACA,kBAAC,IAAD,CAAOU,OAAK,EAACF,KAAK,oBAAoBC,UAAWE,Y,GAjBrCZ,aCHEa,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.7e29ea89.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/toggle.55f68494.svg\";","module.exports = __webpack_public_path__ + \"static/media/add.0e3e08bc.svg\";","module.exports = __webpack_public_path__ + \"static/media/noti.b89b3056.svg\";","module.exports = __webpack_public_path__ + \"static/media/alert1.03f2407b.svg\";","module.exports = __webpack_public_path__ + \"static/media/dp2.f90dd83d.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.700ea238.png\";","import React,{Component} from 'react';\nimport {Link} from 'react-router-dom';\n\nimport toggle from '../toggle.svg';\nimport add from '../add.svg';\nimport noti from '../noti.svg';\nimport alert1 from '../alert1.svg';\nimport dp2 from '../dp2.png';\nimport logo from '../logo.png';\n\nclass Header extends Component{\n  \n  state = {\n    isNavOn: false\n};\n  \n    render(){\n\n \n    return(\n     \n      <div class=\"header22\">\n      \n      <div className=\"topbar\">\n      \n        \n        <a><img src={toggle}  \n        onClick={()=>this.setState({isNavOn: !this.state.isNavOn})}\n        class=\"toggle\" alt=\"\"/></a>\n        \n      <Link to='/Dashboard6/hello'>\n        <div class=\"nav-right\">\n        <a><img  src={alert1}class=\"icons\"alt=\"\"/></a>\n        <a><img  src={noti} class=\"icons\"alt=\"\" /></a>\n      <a><img  src={add} class=\"icons\"alt=\"\" /></a>\n      <a><img  src={dp2}class=\"dp\" alt=\"\"/></a>\n      \n     </div>\n\n     <div className=\"sidenav\" >\n          \n            <img src={logo} class=\"logo\" alt=\"\"/>\n            <br/>\n           <Link to='/Dashboard6/hello'>\n          <a className=\"tg1\" href=\"\">Dashboard</a>\n          <br/>\n          <a className=\"tg1\" href=\"\">University</a>\n          <br/>\n          <a className=\"tg1\" href=\"\">System</a>\n          </Link> \n          \n        </div>\n        <div className={this.state.isNavOn ? \"sidenav22\": \"hide\"} >\n          \n          \n         <Link to='/Dashboard6/hello'>\n        <a className=\"tg2\" href=\"\">Dashboard</a>\n        <br/>\n        <a className=\"tg2\" href=\"\">University</a>\n        <br/>\n        <a className=\"tg2\" href=\"\">System</a>\n        </Link> \n        \n      </div>\n     </Link>\n     </div>\n\n     \n </div>\n \n       )\n}\n}\n\n\n\n\nexport default Header;","import React,{Component} from 'react';\nimport {Link} from 'react-router-dom';\n\n\n\nclass MainComponent extends Component{\n    render(){\n     \n        const cardstyle={\n        color: 'white',\n        textDecoration: 'none'\n        };\n\n    return(\n        \n\n        <div class=\"main\">\n           \n        <div class=\"box box1\">\n\n        <div class=\"container\">\n        <div class=\"card1 card bg-c-yellow order-card\">\n            <Link style={cardstyle} to='/Dashboard6/hello'>\n                <div class=\"card-block\">\n                    \n                    <h2 ><span>“Concentrate all your thoughts upon the work in hand. The sun's rays do not burn until brought to a focus. “</span></h2>\n                    <p >--Alexander Graham Bell</p>\n                </div>\n                </Link>\n            </div>\n          </div>\n          </div>\n        \n        \n        <div class=\"box box2\">\n        <div class=\"container\">\n        <div class=\"card2 card bg-c-pink order-card\">\n        <Link style={cardstyle} to='/Dashboard6/hello'>\n                <div class=\"card-block\">\n                    <h1 >Weekly Sales</h1>\n                    <h1 ><span>48M</span></h1>\n                    \n                </div>\n                </Link>\n            </div>\n          </div>\n          </div>\n        \n        <div class=\"box box3\">\n\n  <div class=\"container\">\n        <div class=\"card bg-c-green order-card\">\n        <Link style={cardstyle} to='/Dashboard6/hello'>\n                <div class=\"card-block\">\n                    <h1 >Messages</h1>\n                    <h2 >Alex- <span >Nice work</span></h2>\n                    <h2 >Akash- <span >Kick off meeting</span></h2>\n                    <h2 >Robert- <span >On my way</span></h2>\n                    <h2 >Sayan- <span >Arrived</span></h2>\n                    <h2 >Jessica- <span >Not coming</span></h2>\n                </div>\n                </Link>\n            </div>\n          </div>\n          </div>\n\n\n\n        <div class=\"box box4\">\n\n  <div class=\"container\">\n        <div class=\"card bg-c-pink order-card\">\n        <Link style={cardstyle} to='/Dashboard6/hello'>\n                <div class=\"card-block\">\n                    <h3 >Announcements</h3>\n                    <h2 ><span>AriGreat Presentation</span></h2>\n                    <p >To start a blog, think of a topic about and first brainstorm ways to write details</p>\n                </div>\n                </Link>\n            </div>\n          </div>\n          </div>\n\n\n        <div class=\"box box5\">\n        <div class=\"container\">\n        <div class=\"card5 card bg-c-orange order-card\">\n        <Link style={cardstyle} to='/Dashboard6/hello'>\n                <div class=\"card-block\">\n                    <h1 >Revenues</h1>\n                    <h1 >240,000 Total Sales</h1>\n                    \n                </div>\n                </Link>\n            </div>\n          </div>\n          </div>\n\n\n        <div class=\"box box6\">\n\n  <div class=\"container\">\n        <div class=\"card6 card bg-c-blue order-card\">\n        <Link style={cardstyle} to='/Dashboard6/hello'>\n                <div class=\"card-block\">\n                    <h2 >Services Sold</h2>\n                    <h2 ><span>486</span></h2>\n                    <p >Completed Orders<span >351</span></p>\n                </div>\n                </Link>\n            </div>\n          </div>\n          </div>\n\n        <div class=\"box box7\">\n\n        <div class=\"container\">\n    \n        \n            <div class=\"card7 card bg-c-yellow order-card\">\n            <Link style={cardstyle} to='/Dashboard6/hello'>\n                <div class=\"card-block\">\n                    <h1>Recent Activity</h1>\n                    <h2>NASDAQ<span> 12,342.33</span></h2>\n                    <h2>NYSE<span>   11,422.23</span></h2>\n                    <h2>DOW J<span> 11,342.23</span></h2>\n                    <h2>NIKE<span> 45,232.56</span></h2>\n                    <h2>NASDAQ<span> 10,232</span></h2>\n                    \n                </div>\n                </Link>\n            </div>\n        </div>\n     </div>\n\n\n\n</div>\n\n      \n      \n    )\n}\n}\n\n\n\nexport default MainComponent;","import React,{Component} from 'react';\n\n\nclass Team extends Component{\n    render(){\n    const fstyle={\n        fontSize: '100px'\n    };\n        return(\n            <div class=\"main\">\n            <h1 style={fstyle}>Hello Team</h1>\n            </div>\n        )\n    }\n}\n\nexport default Team;\n","import React, { Component } from 'react';\n\n\nimport  './App.css';\n\n \n\nimport Header from './components/Header';\n\n\nimport MainComponent from './components/MainComponent';\nimport Helloteam from './components/Helloteam';\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\n\n\nclass App extends Component {\n\n\n\nrender(){\n  return (\n    <div className=\"App\">\n      <Router>\n      <Route  path=\"/Dashboard6\" component={Header}/>\n    <div className=\"grid-container\">\n       \n      \n      \n      \n      <Route exact path=\"/Dashboard6\" component={MainComponent}/>\n \n      <Switch>\n      <Route exact path=\"/Dashboard6/hello\" component={Helloteam}/>\n      </Switch>\n    \n     \n     </div> \n      \n    </Router>\n    </div>\n  );\n    }\n}\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}